C51 COMPILER V9.01   CLOCK                                                                 09/14/2023 15:12:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN Clock.OBJ
COMPILER INVOKED BY: D:\Software\Keil\C51\BIN\C51.EXE Clock.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REG51.H>
   2          
   3          #define INTERVAL 1 // 间隔1毫秒
   4          
   5          #define INIT_HOUR 23   // 初始化小时
   6          #define INIT_MINUTE 59 // 初始化分钟
   7          #define INIT_SECOND 20 // 初始化秒
   8          
   9          unsigned char hour = INIT_HOUR;     // 初始化小时
  10          unsigned char minute = INIT_MINUTE; // 初始化分钟
  11          unsigned char second = INIT_SECOND; // 初始化秒
  12          
  13          unsigned char displayIndex = 0;
  14          unsigned char LED8[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  15          
  16          unsigned int interruptCount = 0; // 中断次数
  17          
  18          sbit SEG_DS = P2 ^ 0;   // 74HC595芯片的数据引脚
  19          sbit SEG_SHCP = P2 ^ 1; // 74HC595芯片的控制引脚，上升沿移入数据
  20          sbit SEG_STCP = P2 ^ 2; // 74HC595芯片的控制引脚，上升沿更新数据
  21          
  22          unsigned char code Seg_Data[] = {
  23              // 共阳数码管的编码，并将数据定义在CODE区
  24              0xc0, /*0*/
  25              0xF9, /*1*/
  26              0xA4, /*2*/
  27              0xB0, /*3*/
  28              0x99, /*4*/
  29              0x92, /*5*/
  30              0x82, /*6*/
  31              0xF8, /*7*/
  32              0x80, /*8*/
  33              0x90, /*9*/
  34              0x88, /*A*/
  35              0x83, /*b*/
  36              0xC6, /*C*/
  37              0xA1, /*d*/
  38              0x86, /*E*/
  39              0x8E, /*F*/
  40              0xBF, /*-*/
  41              0xFF, /*OFFF*/
  42          };
  43          
  44          unsigned char code Seg_Addr[] = {
  45              // 数码管位选编码，控制显示8位中的第几位
  46              0x01,
  47              0x02,
  48              0x04,
  49              0x08,
  50              0x10,
  51              0x20,
  52              0x40,
  53              0x80,
  54              0xFF, // ALL ON
  55              0x00  // OFF
C51 COMPILER V9.01   CLOCK                                                                 09/14/2023 15:12:59 PAGE 2   

  56          };
  57          
  58          void DisplayOneCharOnAddr(unsigned char, unsigned char Addr);
  59          void SEG_Send595OneByte(unsigned char ucData); // 向74HC595写入一个8位的数据
  60          void SecondIncrease();
  61          
  62          void SecondIncrease()
  63          {
  64   1          second++;
  65   1          if (second == 60)
  66   1          {
  67   2              second = 0;
  68   2              minute++;
  69   2          }
  70   1          if (minute == 60)
  71   1          {
  72   2              minute = 0;
  73   2              hour++;
  74   2          }
  75   1          if (hour == 24)
  76   1          {
  77   2              hour = 0;
  78   2          }
  79   1      }
  80          
  81          void Display()
  82          {
  83   1          DisplayOneCharOnAddr(LED8[displayIndex], displayIndex); // 显示数码管
  84   1          displayIndex++;
  85   1          displayIndex %= 8; // 显示下一个数码管
  86   1      }
  87          
  88          void Timer0() interrupt 1
  89          { // 定时器0中断服务函数
  90   1          interruptCount++;
  91   1      
  92   1          TH0 = (65536 - INTERVAL * 1000) / 256;
  93   1          TL0 = (65536 - INTERVAL * 1000) % 256;
  94   1      
  95   1          if (interruptCount == 1000 / INTERVAL)
  96   1          { // 1秒
  97   2              interruptCount = 0;
  98   2              SecondIncrease();
  99   2          }
 100   1      
 101   1          LED8[0] = hour / 10; // 显示小时十位
 102   1          LED8[1] = hour % 10; // 显示小时个位
 103   1          LED8[2] = 16;
 104   1          LED8[3] = minute / 10; // 显示分钟十位
 105   1          LED8[4] = minute % 10; // 显示分钟个位
 106   1          LED8[5] = 16;
 107   1          LED8[6] = second / 10; // 显示秒十位
 108   1          LED8[7] = second % 10; // 显示秒个位
 109   1      
 110   1          Display();
 111   1      }
 112          
 113          void Init()
 114          {
 115   1          EA = 1; // 开启总中断
 116   1      
 117   1          TMOD = 0x01; // 设置计时器0工作在方式1
C51 COMPILER V9.01   CLOCK                                                                 09/14/2023 15:12:59 PAGE 3   

 118   1          ET0 = 1;     // 允许计时器0中断
 119   1          TR0 = 1;     // 启动计时器
 120   1          TH0 = (65536 - INTERVAL * 1000) / 256;
 121   1          TL0 = (65536 - INTERVAL * 1000) % 256;
 122   1      }
 123          
 124          void main()
 125          {
 126   1          Init();
 127   1          while (1)
 128   1          {
 129   2              ;
 130   2          }
 131   1      }
 132          
 133          // 向HC595发送一个字节
 134          void SEG_Send595OneByte(unsigned char ucData)
 135          {
 136   1          unsigned char i;
 137   1      
 138   1          for (i = 0; i < 8; i++) // 8位数据依次写入，先写最低位
 139   1          {
 140   2              SEG_DS = (ucData & 0x80); // 先读入高位   x&0x80;
 141   2              SEG_SHCP = 0;
 142   2              SEG_SHCP = 1;
 143   2              SEG_SHCP = 0; // SHCP引脚的上升沿移入数据
 144   2              ucData <<= 1; // 数据左移
 145   2          }
 146   1      }
 147          
 148          /*******************************************************
 149          函数功能：在指定位置显示一个数据
 150          参数说明：Data是要显示的数据，Addr是在第几位显示。
 151          
 152          Addr取值范围是0~9。
 153          Addr=0~7时，选择的是显示在第几位数码管上;
 154          Addr=8  时，同时选中8位数码管，即打开所有数码管
 155          Addr=9  时，关闭8位数码管
 156          
 157          8位数码管，左数依次为第0位，第1位...第7位。
 158          
 159          *******************************************************/
 160          void DisplayOneCharOnAddr(unsigned char Data, unsigned char Addr)
 161          {
 162   1          SEG_Send595OneByte(Seg_Addr[Addr]); // 显示在哪一个数码管上
 163   1          SEG_Send595OneByte(Seg_Data[Data]); // 显示的数据
 164   1          SEG_STCP = 0;
 165   1          SEG_STCP = 1; // STCP引脚的上升沿更新数据
 166   1          SEG_STCP = 0;
 167   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    267    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
